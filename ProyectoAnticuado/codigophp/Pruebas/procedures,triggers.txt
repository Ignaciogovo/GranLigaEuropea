--CLASIFICACION







CREATE OR ALTER PROCEDURE actualizarprueba_clasificacion @id_ganador int, @id_perdedor int, @golesganador int, @golesperdedor int
as
update prueba_clasificacion set puntos=puntos+3, golesAfavor=golesAfavor+@golesganador, golesEncontra=golesEncontra+@golesperdedor where id_club=@id_ganador;
update prueba_clasificacion set golesAfavor=golesAfavor+@golesperdedor, golesEncontra=golesEncontra+@golesganador where id_club=@id_perdedor;
go




CREATE OR AlTER TRIGGER triggeractualizacionprueba_competicion
ON prueba_partidos
for insert
as
begin 
set nocount on; --No deja rastro visible en la pantalla
--declaracion variables
declare @local as int;
declare @visitante as int;
declare @golocal as int;
declare @golvisitante as int;
--obtencion de las variables desde la tabla inserted
select @local = id_local from inserted;
select @visitante= id_visitante from inserted;
select @golocal = goles_local from inserted;
select @golvisitante= goles_visitante from inserted;
--Condicionales para decidir el ganador
	if @golocal > @golvisitante
		begin
			exec actualizarprueba_clasificacion @local,@visitante,@golocal, @golvisitante;
		end
	if @golocal < @golvisitante
		begin
			exec actualizarprueba_clasificacion @visitante,@local,@golvisitante, @golocal;
		end
end








---Version con Empates:


CREATE OR AlTER TRIGGER triggeractualizacionprueba_competicion
ON prueba_partidos
for insert
as
begin 
set nocount on; --No deja rastro visible en la pantalla
--declaracion variables
declare @local as int;
declare @visitante as int;
declare @golocal as int;
declare @golvisitante as int;
--obtencion de las variables desde la tabla inserted
select @local = id_local from inserted;
select @visitante= id_visitante from inserted;
select @golocal = goles_local from inserted;
select @golvisitante= goles_visitante from inserted;
exec actualizarprueba_clasificacion @local,@visitante,@golocal, @golvisitante;
end



CREATE OR ALTER PROCEDURE actualizarprueba_clasificacion @id_local int, @id_visitante int, @golocal int, @golvisitante int
as
declare @id_ganador as int;
declare @id_perdedor as int;
declare @golesganador as int;
declare @golesperdedor as int;
--Condicionales para decidir el ganador o empate
if @golocal <> @golvisitante
begin
if @golocal > @golvisitante
		begin
			set @id_ganador = @id_local;
			set @id_perdedor = @id_visitante;
			set @golesganador = @golocal;
			set @golesperdedor = @golvisitante;
		end
	if @golocal < @golvisitante
		begin
			set @id_ganador = @id_visitante;
			set @id_perdedor = @id_local;
			set @golesganador = @golvisitante;
			set @golesperdedor = @golocal;
		end
update prueba_clasificacion 
set puntos=puntos+3, golesAfavor=golesAfavor+@golesganador, golesEncontra=golesEncontra+@golesperdedor 
where id_club=@id_ganador;
update prueba_clasificacion 
set golesAfavor=golesAfavor+@golesperdedor, golesEncontra=golesEncontra+@golesganador 
where id_club=@id_perdedor;

end
if @golocal = @golvisitante
begin
update prueba_clasificacion 
set puntos=puntos+1, golesAfavor=golesAfavor+@golocal, golesEncontra=golesEncontra+@golvisitante
where id_club=@id_local;
update prueba_clasificacion 
set puntos=puntos+1,golesAfavor=golesAfavor+@golvisitante, golesEncontra=golesEncontra+@golocal
where id_club=@id_visitante;
end
go








--prueba_estadisticasTotales



CREATE OR ALTER PROCEDURE actualizarprueba_Estadisticas @id_jugador int, @goles int, @amarillas int, @rojas int, @Partidos_titular int
as
begin
update prueba_estadisticasTotales 
set goles=goles+@goles, amarillas=amarillas+@amarillas, rojas=rojas+@rojas, Partidos_titular=Partidos_titular+@Partidos_titular
where id_jugador=@id_jugador;
end
go

CREATE OR ALTER TRIGGER triggeractualizacion_Estadisticas
ON prueba_Estadisticas_partido
for insert
as
begin
--declaracion variables
declare @jugador as int;
declare @goles as int;
declare @amarillas as int;
declare @rojas as int;
declare @titular as int;
select @jugador = id_jugador from inserted;
select @goles = goles from inserted;
select @amarillas = amarillas from inserted;
select @rojas = roja from inserted;
select @titular = titularidad from inserted;
exec actualizarprueba_Estadisticas @jugador,@goles,@amarillas,@rojas,@titular;
end
go










--CLASIFICACION POR TEMPORADA

CREATE OR ALTER PROCEDURE insertar_clasificacion @temporada int
as
declare @id_club as int;
declare @golesAfavor as int;
declare @golesEncontra as int;
declare @puntos as int;
declare @i as int;
set @i = 1;
while @i <=16
begin
set @id_club = @i;
select  @puntos = puntos from prueba_clasificacion where id_club = @i;
select  @golesAfavor = golesAfavor from prueba_clasificacion where id_club = @i;
select  @golesEncontra = golesEncontra from prueba_clasificacion where id_club = @i;
insert into prueba_clasificacionTemporada (id_club, puntos, golesAfavor, golesEncontra, Temporada)
VALUES (@id_club,@puntos,@golesAfavor, @golesEncontra,@temporada);
set @i = @i + 1;
end;
go

CREATE OR ALTER PROCEDURE reinicioClasificacion
as
begin
delete from prueba_clasificacion;
INSERT INTO [prueba_clasificacion] (id_club,puntos,golesAfavor,golesEncontra)
VALUES
  (1,0,0,0),
  (2,0,0,0),
  (3,0,0,0),
  (4,0,0,0),
  (5,0,0,0),
  (6,0,0,0),
  (7,0,0,0),
  (8,0,0,0),
  (9,0,0,0),
  (10,0,0,0);
INSERT INTO [prueba_clasificacion] (id_club,puntos,golesAfavor,golesEncontra)
VALUES
  (11,0,0,0),
  (12,0,0,0),
  (13,0,0,0),
  (14,0,0,0),
  (15,0,0,0),
  (16,0,0,0);
end
go





CREATE OR ALTER TRIGGER pruebafinalTemporada
on prueba_temporadas
for insert
as
begin
declare @temporada as int;
select @temporada = id from inserted;
set @temporada = @temporada - 1;					--Para coger los datos de la temporada terminada
if @temporada <> 0 									--Si es 0 no se insertan datos en la CLASIFICACION
begin
exec insertar_clasificacion @temporada;
end;
exec reinicioClasificacion;
end
go
